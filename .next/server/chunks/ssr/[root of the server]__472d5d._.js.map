{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Hp/Desktop/project-hack/job/app/jobs/page.js"],"sourcesContent":[" \"use client\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function Job() {\r\n  const [selectedJob, setSelectedJob] = useState(null);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    resume: null,\r\n    availability: \"immediate\",\r\n  });\r\n\r\n  const openModal = (job) => {\r\n    setSelectedJob(job);\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n    setFormData({ fullName: \"\", email: \"\", resume: null, availability: \"immediate\" });\r\n\r\n    // Reset file input\r\n    const fileInput = document.querySelector('input[type=\"file\"]');\r\n    if (fileInput) {\r\n      fileInput.value = \"\";\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFormData({ ...formData, resume: e.target.files[0] });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append(\"jobTitle\", selectedJob?.title || \"Unknown Job\");\r\n    data.append(\"fullName\", formData.fullName);\r\n    data.append(\"email\", formData.email);\r\n    if (formData.resume) {\r\n      data.append(\"resume\", formData.resume);\r\n    }\r\n    data.append(\"availability\", formData.availability);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/apply\", data, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      toast.success(response.data.message);\r\n      closeModal();\r\n    } catch (error) {\r\n      toast.error(\"Failed to submit application!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-10 text-left\">\r\n      <ToastContainer />\r\n\r\n      <h1 className=\"text-3xl font-bold\">Job Listings</h1>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mt-6\">\r\n        {[\r\n          { id: 1, title: \"Software Engineer\", company: \"TechCorp\", location: \"New York, USA\", salary: \"$80,000\" },\r\n          { id: 2, title: \"Data Analyst\", company: \"DataWorld\", location: \"San Francisco, USA\", salary: \"$75,000\" },\r\n        ].map((job) => (\r\n          <div key={job.id} className=\"p-4 border rounded-lg shadow-lg\">\r\n            <h3 className=\"font-semibold text-xl\">{job.title}</h3>\r\n            <p className=\"text-gray-600\">\r\n              {job.company} - {job.location}\r\n            </p>\r\n            <p className=\"text-green-600 font-semibold\">{job.salary}</p>\r\n            <button\r\n              className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n              onClick={() => openModal(job)}\r\n            >\r\n              Apply Now\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {modalIsOpen && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\">\r\n          <div className=\"bg-white p-6 rounded-md shadow-lg w-96\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Applying for {selectedJob?.title || \"Job\"}</h2>\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"fullName\"\r\n                value={formData.fullName}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Full Name\"\r\n                className=\"w-full p-2 border rounded\"\r\n                required\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Email\"\r\n                className=\"w-full p-2 border rounded\"\r\n                required\r\n              />\r\n              <input type=\"file\" name=\"resume\" onChange={handleFileChange} className=\"w-full p-2 border rounded\" required />\r\n              <div>\r\n                <label className=\"block\">Confirm your availability:</label>\r\n                <label className=\"inline-flex items-center\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"availability\"\r\n                    value=\"immediate\"\r\n                    checked={formData.availability === \"immediate\"}\r\n                    onChange={(e) => setFormData({ ...formData, availability: e.target.value })}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  Yes, I am available immediately\r\n                </label>\r\n                <label className=\"inline-flex items-center ml-4\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"availability\"\r\n                    value=\"custom\"\r\n                    checked={formData.availability === \"custom\"}\r\n                    onChange={(e) => setFormData({ ...formData, availability: e.target.value })}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  No, I will specify availability\r\n                </label>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 w-full\"\r\n              >\r\n                Submit Application\r\n              </button>\r\n            </form>\r\n            <button onClick={closeModal} className=\"mt-4 text-gray-600\">\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}